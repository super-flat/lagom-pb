lagom {
	broker {
		kafka {
			brokers = "localhost:9092"
			brokers = ${?KAFKA_BROKER}
			# disable kafka-native
			service-name = ""
		}
	}
}

akka {
	kafka {
		producer {
			kafka-clients {
				bootstrap.servers = "localhost:9092"
				bootstrap.servers = ${?KAFKA_BROKER}
			}
		}

		consumer {
			kafka-clients {}
		}
	}

	projection {
		slick {
			# The Slick profile to use
			# set to one of: slick.jdbc.DerbyProfile$, slick.jdbc.H2Profile$, slick.jdbc.HsqldbProfile$, slick.jdbc.MySQLProfile$,
			#                slick.jdbc.PostgresProfile$, slick.jdbc.SQLiteProfile$, slick.jdbc.OracleProfile$
			#profile = <fill this with your profile of choice>
			profile = "slick.jdbc.PostgresProfile$"
			# add here your Slick db settings
			db {
				driver = "org.postgresql.Driver"
				user = ""
				user = ${?READ_SIDE_OFFSET_DB_USER}
				password = ""
				password = ${?READ_SIDE_OFFSET_DB_PASSWORD}
				serverName = ""
				serverName = ${?READ_SIDE_OFFSET_DB_HOST}
				portNumber = 5432
				portNumber = ${?READ_SIDE_OFFSET_DB_PORT}
				databaseName = ""
				databaseName = ${?READ_SIDE_OFFSET_DB_NAME}
				url = "jdbc:postgresql://"${akka.projection.slick.db.serverName}":"${akka.projection.slick.db.portNumber}"/"${akka.projection.slick.db.databaseName}
				connectionPool = "HikariCP"
				keepAliveConnection = true
			}

			offset-store {
				# set this to your database schema if applicable, empty by default
				schema = ""
				schema = ${?READ_SIDE_OFFSET_DB_SCHEMA}
				# the database table name for the offset store
				table = "AKKA_PROJECTION_OFFSET_STORE"
			}
		}
		restart-backoff {
			min-backoff = 3s
			max-backoff = 30s
			random-factor = 0.2

			# -1 will not cap the amount of restarts
			# 0 will disable restarts
			max-restarts = -1
		}
	}
}

lagompb {
	projection {
		kafka {
			bootstrap.servers = "localhost:9092"
			bootstrap.servers = ${?KAFKA_BROKER}
			topic = ""
			topic = ${?KAFKA_TOPIC}
		},

		create-tables {
			auto = false
			auto = ${?READ_SIDE_OFFSET_DB_AUTO_CREATE}
		}
	}
}
